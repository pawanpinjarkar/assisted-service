// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// UpdateClusterIgnitionConfigReader is a Reader for the UpdateClusterIgnitionConfig structure.
type UpdateClusterIgnitionConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterIgnitionConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateClusterIgnitionConfigCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateClusterIgnitionConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateClusterIgnitionConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateClusterIgnitionConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterIgnitionConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateClusterIgnitionConfigMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateClusterIgnitionConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateClusterIgnitionConfigCreated creates a UpdateClusterIgnitionConfigCreated with default headers values
func NewUpdateClusterIgnitionConfigCreated() *UpdateClusterIgnitionConfigCreated {
	return &UpdateClusterIgnitionConfigCreated{}
}

/*UpdateClusterIgnitionConfigCreated handles this case with default header values.

Success.
*/
type UpdateClusterIgnitionConfigCreated struct {
}

func (o *UpdateClusterIgnitionConfigCreated) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigCreated ", 201)
}

func (o *UpdateClusterIgnitionConfigCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterIgnitionConfigBadRequest creates a UpdateClusterIgnitionConfigBadRequest with default headers values
func NewUpdateClusterIgnitionConfigBadRequest() *UpdateClusterIgnitionConfigBadRequest {
	return &UpdateClusterIgnitionConfigBadRequest{}
}

/*UpdateClusterIgnitionConfigBadRequest handles this case with default header values.

Error.
*/
type UpdateClusterIgnitionConfigBadRequest struct {
	Payload *models.Error
}

func (o *UpdateClusterIgnitionConfigBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateClusterIgnitionConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateClusterIgnitionConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterIgnitionConfigUnauthorized creates a UpdateClusterIgnitionConfigUnauthorized with default headers values
func NewUpdateClusterIgnitionConfigUnauthorized() *UpdateClusterIgnitionConfigUnauthorized {
	return &UpdateClusterIgnitionConfigUnauthorized{}
}

/*UpdateClusterIgnitionConfigUnauthorized handles this case with default header values.

Unauthorized.
*/
type UpdateClusterIgnitionConfigUnauthorized struct {
	Payload *models.InfraError
}

func (o *UpdateClusterIgnitionConfigUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateClusterIgnitionConfigUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *UpdateClusterIgnitionConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterIgnitionConfigForbidden creates a UpdateClusterIgnitionConfigForbidden with default headers values
func NewUpdateClusterIgnitionConfigForbidden() *UpdateClusterIgnitionConfigForbidden {
	return &UpdateClusterIgnitionConfigForbidden{}
}

/*UpdateClusterIgnitionConfigForbidden handles this case with default header values.

Forbidden.
*/
type UpdateClusterIgnitionConfigForbidden struct {
	Payload *models.InfraError
}

func (o *UpdateClusterIgnitionConfigForbidden) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigForbidden  %+v", 403, o.Payload)
}

func (o *UpdateClusterIgnitionConfigForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *UpdateClusterIgnitionConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterIgnitionConfigNotFound creates a UpdateClusterIgnitionConfigNotFound with default headers values
func NewUpdateClusterIgnitionConfigNotFound() *UpdateClusterIgnitionConfigNotFound {
	return &UpdateClusterIgnitionConfigNotFound{}
}

/*UpdateClusterIgnitionConfigNotFound handles this case with default header values.

Error.
*/
type UpdateClusterIgnitionConfigNotFound struct {
	Payload *models.Error
}

func (o *UpdateClusterIgnitionConfigNotFound) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigNotFound  %+v", 404, o.Payload)
}

func (o *UpdateClusterIgnitionConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateClusterIgnitionConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterIgnitionConfigMethodNotAllowed creates a UpdateClusterIgnitionConfigMethodNotAllowed with default headers values
func NewUpdateClusterIgnitionConfigMethodNotAllowed() *UpdateClusterIgnitionConfigMethodNotAllowed {
	return &UpdateClusterIgnitionConfigMethodNotAllowed{}
}

/*UpdateClusterIgnitionConfigMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type UpdateClusterIgnitionConfigMethodNotAllowed struct {
	Payload *models.Error
}

func (o *UpdateClusterIgnitionConfigMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *UpdateClusterIgnitionConfigMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateClusterIgnitionConfigMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterIgnitionConfigInternalServerError creates a UpdateClusterIgnitionConfigInternalServerError with default headers values
func NewUpdateClusterIgnitionConfigInternalServerError() *UpdateClusterIgnitionConfigInternalServerError {
	return &UpdateClusterIgnitionConfigInternalServerError{}
}

/*UpdateClusterIgnitionConfigInternalServerError handles this case with default header values.

Error.
*/
type UpdateClusterIgnitionConfigInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateClusterIgnitionConfigInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /clusters/{cluster_id}/ignition-config][%d] updateClusterIgnitionConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateClusterIgnitionConfigInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateClusterIgnitionConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
